#include <stdio.h>
#define MAX 100

int visited[MAX] = {0};
int stack[MAX];
int top = -1;

void dfs(int graph[MAX][MAX], int vertices, int start) {
    visited[start] = 1;
    for (int i = 0; i < vertices; i++) {
        if (graph[start][i] == 1 && !visited[i]) {
            dfs(graph, vertices, i);
        }
    }
    stack[++top] = start;
}

void topological_sort(int graph[MAX][MAX], int vertices) {
    for (int i = 0; i < vertices; i++) {
        if (!visited[i]) {
            dfs(graph, vertices, i);
        }
    }
    printf("Topological Sort Order:\n");
    while (top != -1) {
        printf("%d ", stack[top--]);
    }
    printf("\n");
}

int main() {
    int graph[MAX][MAX] = {0};
    int vertices, edges, u, v;

    printf("Enter number of vertices: ");
    scanf("%d", &vertices);

    printf("Enter number of edges: ");
    scanf("%d", &edges);

    for (int i = 0; i < edges; i++) {
        printf("Enter edge %d (u v): ", i + 1);
        scanf("%d%d", &u, &v);
        graph[u][v] = 1;
    }

    topological_sort(graph, vertices);
    return 0;
}
